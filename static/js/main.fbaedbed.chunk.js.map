{"version":3,"sources":["Grid.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Grid","width","height","playerX","playerY","items","enemies","className","Array","fill","map","_","y","style","display","x","find","item","enemy","pathfinder","PF","AStarFinder","initialState","points","player","init","reducer","state","action","playerState","itemIndex","newItem","newX","newY","gridHeight","gridWidth","findIndex","Math","floor","random","filter","index","movePlayer","reduce","acc","enemyIndex","grid","setWalkableAt","forEach","paths","findPath","clone","sort","pathA","pathB","length","newEnemyX","newEnemyY","slice","moveEnemy","App","React","useReducer","dispatch","keyDownHandler","e","key","useEffect","window","addEventListener","removeEventListener","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbaedbed.chunk.js","sourcesContent":["import * as React from \"react\";\n\nimport \"./Grid.css\";\n\ntype Props = {\n  width: number;\n  height: number;\n  playerX: number;\n  playerY: number;\n  items: Array<{ x: number; y: number }>;\n  enemies: Array<{ x: number; y: number }>;\n};\n\nexport const Grid = ({ width, height, playerX, playerY, items, enemies }: Props) => (\n  <div className=\"grid\">\n    {Array(height)\n      .fill(null)\n      .map((_, y) => (\n        <div key={y} style={{ display: \"flex\" }}>\n          {Array(width)\n            .fill(null)\n            .map((_, x) => (\n              <div\n                key={`${x}-${y}`}\n                className={`grid-field${\n                  playerX === x && playerY === y ? \" player-field\" : \"\"\n                }${\n                  items.find((item) => item.x === x && item.y === y)\n                    ? \" item-field\"\n                    : \"\"\n                }${\n                  enemies.find((enemy) => enemy.x === x && enemy.y === y)\n                    ? \" enemy-field\"\n                    : \"\"\n                }`}\n              />\n            ))}\n        </div>\n      ))}\n  </div>\n);\n","import React from \"react\";\nimport PF from \"pathfinding\";\nimport { Grid } from \"./Grid\";\n\nimport \"./App.css\";\n\ntype Player = {\n  x: number;\n  y: number;\n};\n\ntype Item = {\n  x: number;\n  y: number;\n};\n\ntype Enemy = {\n  x: number;\n  y: number;\n};\n\ntype Action = \"up\" | \"down\" | \"left\" | \"right\";\n\ntype State = {\n  points: number;\n  player: Player;\n  items: Array<Item>;\n  enemies: Array<Enemy>;\n};\n\nconst gridWidth = 10;\nconst gridHeight = 10;\n\nvar pathfinder = new PF.AStarFinder();\n\nconst initialState: State = {\n  points: 0,\n  player: { x: 0, y: 0 },\n  items: [\n    { x: 2, y: 7 },\n    { x: 8, y: 5 },\n    { x: 4, y: 5 },\n    { x: 6, y: 3 },\n  ],\n  enemies: [\n    // { x: 0, y: 9 },\n    // { x: 9, y: 0 },\n    { x: 9, y: 9 },\n  ],\n};\n\nconst init = () => initialState;\n\nconst movePlayer = (state: State, action: Action): State => {\n  let newX = state.player.x;\n  let newY = state.player.y;\n  let itemIndex = -1;\n  let newItem: Array<Item> = [];\n\n  if (action === \"up\") {\n    newX = state.player.x;\n    newY = state.player.y > 0 ? state.player.y - 1 : state.player.y;\n  }\n  if (action === \"down\") {\n    newX = state.player.x;\n    newY =\n      state.player.y < gridHeight - 1 ? state.player.y + 1 : state.player.y;\n  }\n  if (action === \"left\") {\n    newX = state.player.x > 0 ? state.player.x - 1 : state.player.x;\n    newY = state.player.y;\n  }\n  if (action === \"right\") {\n    newX = state.player.x < gridWidth - 1 ? state.player.x + 1 : state.player.x;\n    newY = state.player.y;\n  }\n\n  itemIndex = state.items.findIndex(\n    (item) => item.x === newX && item.y === newY\n  );\n  newItem =\n    itemIndex !== -1\n      ? [\n          {\n            x: Math.floor(gridWidth * Math.random()),\n            y: Math.floor(gridHeight * Math.random()),\n          },\n        ]\n      : [];\n\n  return {\n    ...state,\n    player: {\n      x: newX,\n      y: newY,\n    },\n    points: itemIndex !== -1 ? state.points + 1 : state.points,\n    items: [\n      ...(itemIndex !== -1\n        ? state.items.filter((_, index) => index !== itemIndex)\n        : state.items),\n      ...newItem,\n    ],\n  };\n};\n\nconst moveEnemy = (\n  state: State,\n  enemyIndex: number,\n  pathfinder: PF.AStarFinder\n): State => {\n  const enemy = { ...state.enemies[enemyIndex] };\n  const grid = new PF.Grid(gridWidth, gridHeight);\n\n  grid.setWalkableAt(state.player.x, state.player.y, false);\n  state.enemies.forEach((_, index) => {\n    if (index !== enemyIndex) {\n      grid.setWalkableAt(state.enemies[index].x, state.enemies[index].y, false);\n    }\n  });\n\n  const paths = state.items\n    .map((item) =>\n      pathfinder.findPath(enemy.x, enemy.y, item.x, item.y, grid.clone())\n    )\n    .sort((pathA, pathB) => pathA.length - pathB.length);\n\n  const [newEnemyX, newEnemyY] = paths[0][1] ? paths[0][1] : [enemy.x, enemy.y];\n\n  enemy.x = newEnemyX <= 9 && newEnemyX >= 0 ? newEnemyX : enemy.x;\n  enemy.y = newEnemyY <= 9 && newEnemyY >= 0 ? newEnemyY : enemy.y;\n\n  const itemIndex = state.items.findIndex(\n    (item) => item.x === enemy.x && item.y === enemy.y\n  );\n  const newItem =\n    itemIndex !== -1\n      ? [\n          {\n            x: Math.floor(gridWidth * Math.random()),\n            y: Math.floor(gridHeight * Math.random()),\n          },\n        ]\n      : [];\n\n  return {\n    ...state,\n    items: [\n      ...(itemIndex !== -1\n        ? state.items.filter((_, index) => index !== itemIndex)\n        : state.items),\n      ...newItem,\n    ],\n    points: itemIndex !== -1 ? state.points - 1 : state.points,\n    enemies: [\n      ...state.enemies.slice(0, enemyIndex),\n      enemy,\n      ...state.enemies.slice(enemyIndex + 1, state.enemies.length),\n    ],\n  };\n};\n\nconst reducer = (state: State, action: Action): State => {\n  const playerState = movePlayer(state, action);\n\n  return state.enemies.reduce((acc, _, index) => {\n    return moveEnemy(acc, index, pathfinder);\n  }, playerState);\n};\n\nfunction App() {\n  const [state, dispatch] = React.useReducer(reducer, initialState, init);\n\n  const keyDownHandler = (e: KeyboardEvent) => {\n    if (e.key === \"ArrowUp\") {\n      dispatch(\"up\");\n    }\n    if (e.key === \"ArrowDown\") {\n      dispatch(\"down\");\n    }\n    if (e.key === \"ArrowLeft\") {\n      dispatch(\"left\");\n    }\n    if (e.key === \"ArrowRight\") {\n      dispatch(\"right\");\n    }\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"keydown\", keyDownHandler);\n\n    return () => window.removeEventListener(\"keydown\", keyDownHandler);\n  }, []);\n\n  return (\n    <div className=\"grid-wrapper\">\n      <div className=\"grid-container\">\n        <div className=\"side\">\n          <div className=\"game-title\">Gold Fever</div>\n          <div className=\"game-description\">Collect all the gold</div>\n          <div className=\"game-instruction\">Use arrow keys to move</div>\n        </div>\n        <Grid\n          width={gridWidth}\n          height={gridHeight}\n          playerX={state.player.x}\n          playerY={state.player.y}\n          items={state.items}\n          enemies={state.enemies}\n        />\n        <div className=\"side\">\n          <div className=\"score\">\n            <div className=\"score-title\">Score:</div>\n            <div className=\"score-value\">{state.points}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}