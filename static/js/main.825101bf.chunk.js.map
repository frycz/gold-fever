{"version":3,"sources":["Grid.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Grid","width","height","playerX","playerY","items","className","Array","fill","map","_","y","style","display","x","find","item","gridWidth","gridHeight","initialState","points","player","init","reducer","state","action","newX","newY","itemIndex","newItem","findIndex","Math","floor","random","filter","index","App","React","useReducer","dispatch","keyDownHandler","e","key","useEffect","window","addEventListener","removeEventListener","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.825101bf.chunk.js","sourcesContent":["import * as React from \"react\";\n\nimport \"./Grid.css\";\n\ntype Props = {\n  width: number;\n  height: number;\n  playerX: number;\n  playerY: number;\n  items: Array<{ x: number; y: number }>;\n};\n\nexport const Grid = ({ width, height, playerX, playerY, items }: Props) => (\n  <div className=\"grid\">\n    {Array(height)\n      .fill(null)\n      .map((_, y) => (\n        <div style={{ display: \"flex\" }}>\n          {Array(width)\n            .fill(null)\n            .map((_, x) => (\n              <div\n                className={`grid-field${\n                  playerX === x && playerY === y ? \" player-field\" : \"\"\n                }${\n                  items.find((item) => item.x === x && item.y === y)\n                    ? \" item-field\"\n                    : \"\"\n                }`}\n              />\n            ))}\n        </div>\n      ))}\n  </div>\n);\n","import React from \"react\";\nimport { Grid } from \"./Grid\";\n\nimport \"./App.css\";\n\ntype Player = {\n  x: number;\n  y: number;\n};\n\ntype Item = {\n  x: number;\n  y: number;\n};\n\ntype Action = \"up\" | \"down\" | \"left\" | \"right\";\n\ntype State = {\n  points: number;\n  player: Player;\n  items: Array<Item>;\n};\n\nconst gridWidth = 10;\nconst gridHeight = 10;\n\nconst initialState: State = {\n  points: 0,\n  player: { x: 0, y: 0 },\n  items: [\n    { x: 2, y: 7 },\n    { x: 8, y: 5 },\n    { x: 4, y: 5 },\n    { x: 6, y: 3 },\n  ],\n};\n\nconst init = () => initialState;\n\nconst reducer = (state: State, action: Action): State => {\n  let newX = 0;\n  let newY = 0;\n  let itemIndex = -1;\n  let newItem: Array<Item> = [];\n\n  switch (action) {\n    case \"up\":\n      newX = state.player.x;\n      newY = state.player.y > 0 ? state.player.y - 1 : state.player.y;\n      itemIndex = state.items.findIndex(\n        (item) => item.x === newX && item.y === newY\n      );\n      newItem =\n        itemIndex !== -1\n          ? [\n              {\n                x: Math.floor(gridWidth * Math.random()),\n                y: Math.floor(gridHeight * Math.random()),\n              },\n            ]\n          : [];\n\n      return {\n        ...state,\n        player: {\n          x: newX,\n          y: newY,\n        },\n        points: itemIndex !== -1 ? state.points + 1 : state.points,\n        items: [\n          ...(itemIndex !== -1\n            ? state.items.filter((_, index) => index !== itemIndex)\n            : state.items),\n          ...newItem,\n        ],\n      };\n    case \"down\":\n      newX = state.player.x;\n      newY =\n        state.player.y < gridHeight - 1 ? state.player.y + 1 : state.player.y;\n      itemIndex = state.items.findIndex(\n        (item) => item.x === newX && item.y === newY\n      );\n      newItem =\n        itemIndex !== -1\n          ? [\n              {\n                x: Math.floor(gridWidth * Math.random()),\n                y: Math.floor(gridHeight * Math.random()),\n              },\n            ]\n          : [];\n\n      return {\n        ...state,\n        player: {\n          x: newX,\n          y: newY,\n        },\n        points: itemIndex !== -1 ? state.points + 1 : state.points,\n        items: [\n          ...(itemIndex !== -1\n            ? state.items.filter((_, index) => index !== itemIndex)\n            : state.items),\n          ...newItem,\n        ],\n      };\n    case \"left\":\n      newX = state.player.x > 0 ? state.player.x - 1 : state.player.x;\n      newY = state.player.y;\n      itemIndex = state.items.findIndex(\n        (item) => item.x === newX && item.y === newY\n      );\n      newItem =\n        itemIndex !== -1\n          ? [\n              {\n                x: Math.floor(gridWidth * Math.random()),\n                y: Math.floor(gridHeight * Math.random()),\n              },\n            ]\n          : [];\n\n      return {\n        ...state,\n        player: {\n          x: newX,\n          y: newY,\n        },\n        points: itemIndex !== -1 ? state.points + 1 : state.points,\n        items: [\n          ...(itemIndex !== -1\n            ? state.items.filter((_, index) => index !== itemIndex)\n            : state.items),\n          ...newItem,\n        ],\n      };\n    case \"right\":\n      newX =\n        state.player.x < gridWidth - 1 ? state.player.x + 1 : state.player.x;\n      newY = state.player.y;\n      itemIndex = state.items.findIndex(\n        (item) => item.x === newX && item.y === newY\n      );\n      newItem =\n        itemIndex !== -1\n          ? [\n              {\n                x: Math.floor(gridWidth * Math.random()),\n                y: Math.floor(gridHeight * Math.random()),\n              },\n            ]\n          : [];\n\n      return {\n        ...state,\n        player: {\n          x: newX,\n          y: newY,\n        },\n        points: itemIndex !== -1 ? state.points + 1 : state.points,\n        items: [\n          ...(itemIndex !== -1\n            ? state.items.filter((_, index) => index !== itemIndex)\n            : state.items),\n          ...newItem,\n        ],\n      };\n    default:\n      return { ...state };\n  }\n};\n\nfunction App() {\n  const [state, dispatch] = React.useReducer(reducer, initialState, init);\n\n  const keyDownHandler = (e: KeyboardEvent) => {\n    if (e.key === \"ArrowUp\") {\n      dispatch(\"up\");\n    }\n    if (e.key === \"ArrowDown\") {\n      dispatch(\"down\");\n    }\n    if (e.key === \"ArrowLeft\") {\n      dispatch(\"left\");\n    }\n    if (e.key === \"ArrowRight\") {\n      dispatch(\"right\");\n    }\n  };\n\n  React.useEffect(() => {\n    window.addEventListener(\"keydown\", keyDownHandler);\n\n    return () => window.removeEventListener(\"keydown\", keyDownHandler);\n  }, []);\n\n  return (\n    <div className=\"grid-wrapper\">\n      <div className=\"grid-container\">\n        <div className=\"side\">\n          <div className=\"game-title\">\n            Gold Fever\n          </div>\n          <div className=\"game-description\">\n            Collect all the gold\n          </div>\n          <div className=\"game-instruction\">\n            Use arrow keys to move\n          </div>\n        </div>\n        <Grid\n          width={gridWidth}\n          height={gridHeight}\n          playerX={state.player.x}\n          playerY={state.player.y}\n          items={state.items}\n        />\n        <div className=\"side\">\n          <div className=\"score\">\n            <div className=\"score-title\">Score:</div>\n            <div className=\"score-value\">{state.points}</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}